// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "infrastructure/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  username        String    @unique
  email           String    @unique
  password        String
  profilePic      String?
  resetCode       String?
  resetCodeExpiry DateTime?

  sentMessages     Message[] @relation("SentMessages")
  receivedMessages Message[] @relation("ReceivedMessages")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Song {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  title    String
  artist   String
  imageUrl String
  audioUrl String
  duration Int

  albumId String @db.ObjectId
  album   Album  @relation(fields: [albumId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Album {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  artist      String
  imageUrl    String
  releaseYear Int

  songs Song[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Message {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  senderId   String @db.ObjectId
  receiverId String @db.ObjectId

  sender   User @relation("SentMessages", fields: [senderId], references: [id])
  receiver User @relation("ReceivedMessages", fields: [receiverId], references: [id])

  content String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
